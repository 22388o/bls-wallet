/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Signer} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import {Contract, ContractFactory, Overrides} from "@ethersproject/contracts";

import {FrontendGeneric} from "./FrontendGeneric";

export class FrontendGenericFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<FrontendGeneric> {
    return super.deploy(overrides || {}) as Promise<FrontendGeneric>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FrontendGeneric {
    return super.attach(address) as FrontendGeneric;
  }
  connect(signer: Signer): FrontendGenericFactory {
    return super.connect(signer) as FrontendGenericFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FrontendGeneric {
    return new Contract(address, _abi, signerOrProvider) as FrontendGeneric;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes",
        name: "stateBytes",
        type: "bytes"
      }
    ],
    name: "decodeState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pubkeyID",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "tokenID",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256"
          }
        ],
        internalType: "struct Types.UserState",
        name: "state",
        type: "tuple"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pubkeyID",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "tokenID",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256"
          }
        ],
        internalType: "struct Types.UserState",
        name: "state",
        type: "tuple"
      }
    ],
    name: "encode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061052d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806317412b8a1461003b578063b3b8362114610064575b600080fd5b61004e6100493660046102b2565b610084565b60405161005b9190610447565b60405180910390f35b610077610072366004610270565b6100a3565b60405161005b9190610458565b606061009d610098368490038401846102d8565b6100f1565b92915050565b6100ab610162565b6100ea83838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061013092505050565b9392505050565b6060816000015182602001518360400151846060015160405160200161011a94939291906103ff565b6040516020818303038152906040529050919050565b610138610162565b8180602001905161014c91908101906102f6565b6060850152604084015260208301528152919050565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b60008083601f84011261019c57600080fd5b50813567ffffffffffffffff8111156101b457600080fd5b6020830191508360018202830111156101cc57600080fd5b9250929050565b6000608082840312156101e557600080fd5b50919050565b6000608082840312156101fd57600080fd5b6102076080610466565b90506000610215848461025a565b82525060206102268484830161025a565b602083015250604061023a8482850161025a565b604083015250606061024e8482850161025a565b60608301525092915050565b803561009d816104d3565b805161009d816104d3565b6000806020838503121561028357600080fd5b823567ffffffffffffffff81111561029a57600080fd5b6102a68582860161018a565b92509250509250929050565b6000608082840312156102c457600080fd5b60006102d084846101d3565b949350505050565b6000608082840312156102ea57600080fd5b60006102d084846101eb565b6000806000806080858703121561030c57600080fd5b60006103188787610265565b945050602061032987828801610265565b935050604061033a87828801610265565b925050606061034b87828801610265565b91505092959194509250565b60006103628261048d565b61036c8185610491565b935061037c81856020860161049d565b610385816104c9565b9093019392505050565b805160808301906103a084826103df565b5060208201516103b360208501826103df565b5060408201516103c660408501826103df565b5060608201516103d960608501826103df565b50505050565b6103e88161049a565b82525050565b6103e86103fa8261049a565b61049a565b600061040b82876103ee565b60208201915061041b82866103ee565b60208201915061042b82856103ee565b60208201915061043b82846103ee565b50602001949350505050565b602080825281016100ea8184610357565b6080810161009d828461038f565b60405181810167ffffffffffffffff8111828210171561048557600080fd5b604052919050565b5190565b90815260200190565b90565b60005b838110156104b85781810151838201526020016104a0565b838111156103d95750506000910152565b601f01601f191690565b6104dc8161049a565b81146104e757600080fd5b5056fea365627a7a723158201e71392b7c6c168ea09868121d0952804ad63e9521f550a32b44ebbc3bafb3516c6578706572696d656e74616cf564736f6c634300050f0040";
