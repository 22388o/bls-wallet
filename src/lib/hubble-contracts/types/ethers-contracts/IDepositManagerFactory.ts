/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Contract, Signer} from "ethers";
import {Provider} from "@ethersproject/providers";

import {IDepositManager} from "./IDepositManager";

export class IDepositManagerFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDepositManager {
    return new Contract(address, _abi, signerOrProvider) as IDepositManager;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pubkeyID",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    name: "DepositQueued",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32"
      }
    ],
    name: "DepositSubTreeReady",
    type: "event"
  },
  {
    constant: false,
    inputs: [],
    name: "dequeueToSubmit",
    outputs: [
      {
        internalType: "bytes32",
        name: "subtreeRoot",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "subtreeRoot",
        type: "bytes32"
      }
    ],
    name: "reenqueue",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  }
];
