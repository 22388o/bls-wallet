/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Signer} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import {Contract, ContractFactory, Overrides} from "@ethersproject/contracts";

import {ParamManager} from "./ParamManager";

export class ParamManagerFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ParamManager> {
    return super.deploy(overrides || {}) as Promise<ParamManager>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ParamManager {
    return super.attach(address) as ParamManager;
  }
  connect(signer: Signer): ParamManagerFactory {
    return super.connect(signer) as ParamManagerFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ParamManager {
    return new Contract(address, _abi, signerOrProvider) as ParamManager;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "_CHAIN_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "accountRegistry",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "chooser",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "create2Transfer",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "depositManager",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "exampleToken",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "massMigration",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "merkleUtils",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "paramManager",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "rollupCore",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "spokeRegistry",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "tokenRegistry",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "transferSimple",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "withdrawManager",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  }
];

const _bytecode =
  "0x610410610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061010a5760003560e01c80638b041590116100a1578063adc879e911610070578063adc879e914610181578063d089e11a14610189578063ec3e9da514610191578063fbfa77cf146101995761010a565b80638b0415901461016157806398d17621146101695780639d0d90ec146101715780639d23c4c7146101795761010a565b806347b0f08e116100dd57806347b0f08e146101415780636c7ac9d8146101495780637ae8c5681461015157806381ff852f146101595761010a565b80630ed75b9c1461010f57806320030afd14610129578063203303fb14610131578063392e393914610139575b600080fd5b6101176101a1565b60408051918252519081900360200190f35b6101176101c2565b6101176101e8565b61011761020a565b61011761022f565b610117610251565b610117610278565b61011761029f565b6101176102c2565b6101176102e7565b610117610306565b610117610326565b61011761034c565b61011761036e565b610117610396565b6101176103be565b60408051686d6173735f6d69677360b81b8152905190819003600901902090565b604080516d73706f6b655f726567697374727960901b8152905190819003600e01902090565b6040805169687562626c652d31323360b01b8152905190819003600a01902081565b604080516c32bc30b6b83632afba37b5b2b760991b8152905190819003600d01902090565b604080516936b2b935b632afb634b160b11b8152905190819003600a01902090565b604080516e3232b837b9b4ba2fb6b0b730b3b2b960891b8152905190819003600f01902090565b604080516e31b932b0ba32993a3930b739b332b960891b8152905190819003600f01902090565b604080516a726f6c6c75705f636f726560a81b8152905190819003600b01902090565b604080516c3830b930b6afb6b0b730b3b2b960991b8152905190819003600d01902090565b604080516631b437b7b9b2b960c91b8152905190819003600701902090565b60408051673a3930b739b332b960c11b8152905190819003600801902090565b604080516d746f6b656e5f726567697374727960901b8152905190819003600e01902090565b6040805169687562626c652d31323360b01b8152905190819003600a01902090565b604080516f6163636f756e745f726567697374727960801b8152905190819003601001902090565b604080516f3bb4ba34323930bbafb6b0b730b3b2b960811b8152905190819003601001902090565b60408051641d985d5b1d60da1b815290519081900360050190209056fea265627a7a723158208ef9ae614b7579c241aa41f431a931e7f841667b1db6672fa8cb95a4d6220dc164736f6c634300050f0032";
