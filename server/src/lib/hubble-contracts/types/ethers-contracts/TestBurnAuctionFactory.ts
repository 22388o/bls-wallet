/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Signer, BigNumberish} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import {Contract, ContractFactory, Overrides} from "@ethersproject/contracts";

import {TestBurnAuction} from "./TestBurnAuction";

export class TestBurnAuctionFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    donationAddress: string,
    donationNumerator: BigNumberish,
    overrides?: Overrides
  ): Promise<TestBurnAuction> {
    return super.deploy(
      donationAddress,
      donationNumerator,
      overrides || {}
    ) as Promise<TestBurnAuction>;
  }
  getDeployTransaction(
    donationAddress: string,
    donationNumerator: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      donationAddress,
      donationNumerator,
      overrides || {}
    );
  }
  attach(address: string): TestBurnAuction {
    return super.attach(address) as TestBurnAuction;
  }
  connect(signer: Signer): TestBurnAuctionFactory {
    return super.connect(signer) as TestBurnAuctionFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestBurnAuction {
    return new Contract(address, _abi, signerOrProvider) as TestBurnAuction;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "donationAddress",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "donationNumerator",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "slot",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "coordinator",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "NewBestBid",
    type: "event"
  },
  {
    constant: true,
    inputs: [],
    name: "BLOCKS_PER_SLOT",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "DELTA_BLOCKS_INITIAL_SLOT",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "DONATION_DENOMINATOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    name: "auction",
    outputs: [
      {
        internalType: "address payable",
        name: "coordinator",
        type: "address"
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128"
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256"
      }
    ],
    name: "bid",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "numBlock",
        type: "uint256"
      }
    ],
    name: "block2slot",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "blockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "currentSlot",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "donationAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "donationNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "genesisBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getProposer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256"
      }
    ],
    name: "setBlockNumber",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "witdraw",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "withdrawDonation",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x6080604052600060055534801561001557600080fd5b50604051610cee380380610cee8339818101604052604081101561003857600080fd5b5080516020909101516000548290829061271010156100885760405162461bcd60e51b8152600401808060200182810382526029815260200180610cc56029913960400191505060405180910390fd5b6103e861009c6001600160e01b036100cc16565b01600255600180546001600160a01b0319166001600160a01b039390931692909217909155600055506100d29050565b60055490565b610be4806100e16000396000f3fe6080604052600436106100fe5760003560e01c8063a8c3c85011610095578063e9790d0211610064578063e9790d02146102c0578063ec034bed146102f1578063f2182cf914610306578063f4cc8eea1461031b578063fc7e286d14610330576100fe565b8063a8c3c850146101f5578063b404930e1461021f578063d3dd08e214610249578063e81e1ccc146102ab576100fe565b80634cdc9c63116100d15780634cdc9c631461018c57806357e871e7146101a15780639a478d24146101b6578063a87a2ead146101cb576100fe565b80632243de47146101035780633359632e1461013157806342cbb15c14610146578063454a2ab31461016d575b600080fd5b34801561010f57600080fd5b50610118610363565b6040805163ffffffff9092168252519081900360200190f35b34801561013d57600080fd5b50610118610368565b34801561015257600080fd5b5061015b61037f565b60408051918252519081900360200190f35b61018a6004803603602081101561018357600080fd5b5035610385565b005b34801561019857600080fd5b5061015b610580565b3480156101ad57600080fd5b5061015b610586565b3480156101c257600080fd5b5061015b61058c565b3480156101d757600080fd5b50610118600480360360208110156101ee57600080fd5b5035610592565b34801561020157600080fd5b5061018a6004803603602081101561021857600080fd5b50356105b6565b34801561022b57600080fd5b5061018a6004803603602081101561024257600080fd5b50356105bb565b34801561025557600080fd5b506102796004803603602081101561026c57600080fd5b503563ffffffff16610650565b604080516001600160a01b0390941684526001600160801b039092166020840152151582820152519081900360600190f35b3480156102b757600080fd5b5061018a61068a565b3480156102cc57600080fd5b506102d5610736565b604080516001600160a01b039092168252519081900360200190f35b3480156102fd57600080fd5b506102d56107db565b34801561031257600080fd5b5061015b6107ea565b34801561032757600080fd5b506101186107f0565b34801561033c57600080fd5b5061015b6004803603602081101561035357600080fd5b50356001600160a01b03166107f6565b606481565b600061037a61037561037f565b610592565b905090565b60055490565b600061038f610368565b60020163ffffffff81166000908152600360205260409020600101549091506001600160801b03168083116103f55760405162461bcd60e51b8152600401808060200182810382526023815260200180610b176023913960400191505060405180910390fd5b3360008181526004602052604090205434018411156104455760405162461bcd60e51b8152600401808060200182810382526030815260200180610ac66030913960400191505060405180910390fd5b63ffffffff8316600090815260036020526040812054610472916001600160a01b03909116908490610808565b6001546000546104cb916001600160a01b0316906104ab906127109061049f90899063ffffffff61088916565b9063ffffffff6108eb16565b6104c661271061049f6000548861088990919063ffffffff16565b610808565b6104d6813486610808565b63ffffffff831660008181526003602090815260409182902080546001600160a01b03191633178155600101805460ff60801b196001600160801b038a166fffffffffffffffffffffffffffffffff199092169190911716600160801b17905581519283526001600160a01b03841690830152818101869052517f304f693446955254ce103ccf22f2ee397d8c2517f63076ee63e0dfa22fc5ba559181900360600190a150505050565b60025481565b60055481565b61271081565b60006002548210156105a6575060006105b1565b506002546064908203045b919050565b600555565b336000818152600460205260409020548211156106095760405162461bcd60e51b815260040180806020018281038252603f815260200180610b71603f913960400191505060405180910390fd5b61061581600084610808565b6040516001600160a01b0382169083156108fc029084906000818181858888f1935050505015801561064b573d6000803e3d6000fd5b505050565b600360205260009081526040902080546001909101546001600160a01b03909116906001600160801b03811690600160801b900460ff1683565b6001546001600160a01b03166000908152600460205260409020546106e05760405162461bcd60e51b8152600401808060200182810382526037815260200180610b3a6037913960400191505060405180910390fd5b600180546001600160a01b039081166000908152600460205260408082208054908390559354905192169183156108fc0291849190818181858888f19350505050158015610732573d6000803e3d6000fd5b5050565b600080610741610368565b63ffffffff8116600090815260036020526040902060010154909150600160801b900460ff166107b8576040805162461bcd60e51b815260206004820181905260248201527f41756374696f6e20686173206e6f74206265656e20696e697469616c697a6564604482015290519081900360640190fd5b63ffffffff166000908152600360205260409020546001600160a01b0316905090565b6001546001600160a01b031681565b60005481565b6103e881565b60046020526000908152604090205481565b6001600160a01b0383161561064b576001600160a01b038316600090815260046020526040902054610840908363ffffffff61092d16565b6001600160a01b038416600090815260046020526040902081905561086b908263ffffffff61098716565b6001600160a01b038416600090815260046020526040902055505050565b600082610898575060006108e5565b828202828482816108a557fe5b04146108e25760405162461bcd60e51b8152600401808060200182810382526021815260200180610af66021913960400191505060405180910390fd5b90505b92915050565b60006108e283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506109c9565b6000828201838110156108e2576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60006108e283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610a6b565b60008183610a555760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a1a578181015183820152602001610a02565b50505050905090810190601f168015610a475780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610a6157fe5b0495945050505050565b60008184841115610abd5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610a1a578181015183820152602001610a02565b50505090039056fe4275726e41756374696f6e2c206269643a20696e73756666696369656e742066756e647320666f722062696464696e67536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774275726e41756374696f6e2c206269643a206c657373207468656e2063757272656e744275726e41756374696f6e2c207769746864726177446f6e6174696f6e3a20646f6e6174696f6e206465706f736974206973207a65726f4275726e41756374696f6e2c2077697468647261773a20696e73756666696369656e74206465706f73697420616d6f756e7420666f72207769746864726177a265627a7a723158208c02906f29b2425200fd4a7fd45b9f0e8e9cace2ee70c925dae3d94d9bca69bd64736f6c634300050f00324275726e41756374696f6e2c20636f6e7374727563746f723a206261642064656e6f6d696e61746f72";
