/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Signer} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import {Contract, ContractFactory, Overrides} from "@ethersproject/contracts";

import {AccountTree} from "./AccountTree";

export class AccountTreeFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<AccountTree> {
    return super.deploy(overrides || {}) as Promise<AccountTree>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AccountTree {
    return super.attach(address) as AccountTree;
  }
  connect(signer: Signer): AccountTreeFactory {
    return super.connect(signer) as AccountTreeFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountTree {
    return new Contract(address, _abi, signerOrProvider) as AccountTree;
  }
}

const _abi = [
  {
    inputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    constant: true,
    inputs: [],
    name: "BATCH_DEPTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "BATCH_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "DEPTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "SET_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "WITNESS_LENGTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "filledSubtreesLeft",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "filledSubtreesRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "leafIndexLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "leafIndexRight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "rootLeft",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "rootRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x60806040526000600355600060045534801561001a57600080fd5b5060015b601f8110156100ef57600560018203601f811061003757fe5b0154600560018303601f811061004957fe5b0154604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120600582601f811061008557fe5b0155601f8110156100af57600581601f811061009d57fe5b0154602482601f81106100ac57fe5b01555b806004111580156100c0575080601f115b156100e757600581601f81106100d257fe5b0154604360048303601b81106100e457fe5b01555b60010161001e565b5060235460408051602080820184905281830184905282518083038401815260608301845280519082012060008181556080840186905260a0808501969096528451808503909601865260c084018552855195830195909520600181905560e08401919091526101008084019190915283518084039091018152610120909201909252805191012060025561021d90819061018a90396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806398366e351161008c578063d7c53ea711610066578063d7c53ea714610150578063d828946314610158578063e829558814610160578063ebf0c7171461017d576100cf565b806398366e3514610113578063cab2da9b14610140578063d0383d6814610148576100cf565b8063034a29ae146100d45780631c76e77e1461010357806349faa4d41461010b5780635e71468b14610113578063693c1db71461011b5780638d03796214610123575b600080fd5b6100f1600480360360208110156100ea57600080fd5b5035610185565b60408051918252519081900360200190f35b6100f1610199565b6100f161019e565b6100f16101a3565b6100f16101a8565b6100f16004803603602081101561013957600080fd5b50356101ae565b6100f16101bb565b6100f16101c1565b6100f16101c9565b6100f16101cf565b6100f16004803603602081101561017657600080fd5b50356101d5565b6100f16101e2565b602481601f811061019257fe5b0154905081565b600481565b601081565b601f81565b60035481565b604381601b811061019257fe5b60015481565b638000000081565b60045481565b60005481565b600581601f811061019257fe5b6002548156fea265627a7a72315820e52ba733ddc1e446b0d3b72d4620a766b1e525559421fafd3fbdd24736bb9dd764736f6c634300050f0032";
