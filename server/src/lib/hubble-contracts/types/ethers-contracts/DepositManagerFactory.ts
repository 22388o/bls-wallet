/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Signer, BigNumberish} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import {Contract, ContractFactory, Overrides} from "@ethersproject/contracts";

import {DepositManager} from "./DepositManager";

export class DepositManagerFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _tokenRegistry: string,
    _vault: string,
    maxSubtreeDepth: BigNumberish,
    overrides?: Overrides
  ): Promise<DepositManager> {
    return super.deploy(
      _tokenRegistry,
      _vault,
      maxSubtreeDepth,
      overrides || {}
    ) as Promise<DepositManager>;
  }
  getDeployTransaction(
    _tokenRegistry: string,
    _vault: string,
    maxSubtreeDepth: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenRegistry,
      _vault,
      maxSubtreeDepth,
      overrides || {}
    );
  }
  attach(address: string): DepositManager {
    return super.attach(address) as DepositManager;
  }
  connect(signer: Signer): DepositManagerFactory {
    return super.connect(signer) as DepositManagerFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositManager {
    return new Contract(address, _abi, signerOrProvider) as DepositManager;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ITokenRegistry",
        name: "_tokenRegistry",
        type: "address"
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "maxSubtreeDepth",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pubkeyID",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    name: "DepositQueued",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32"
      }
    ],
    name: "DepositSubTreeReady",
    type: "event"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "babyTrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "babyTreesLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "back",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "depositCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "pubkeyID",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256"
      }
    ],
    name: "depositFor",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "dequeueToSubmit",
    outputs: [
      {
        internalType: "bytes32",
        name: "subtreeRoot",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "front",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "paramMaxSubtreeSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "queue",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "subtreeRoot",
        type: "bytes32"
      }
    ],
    name: "reenqueue",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "rollup",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_rollup",
        type: "address"
      }
    ],
    name: "setRollupAddress",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "tokenRegistry",
    outputs: [
      {
        internalType: "contract ITokenRegistry",
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x60806040526001805560006002556000600455600060055560026006553480156200002957600080fd5b5060405162000dcb38038062000dcb8339810160408190526200004c91620000b6565b600980546001600160a01b039485166001600160a01b03199182161790915560078054939094169216919091179091556001901b60065562000163565b8051620000968162000133565b92915050565b805162000096816200014d565b8051620000968162000158565b600080600060608486031215620000cc57600080fd5b6000620000da86866200009c565b9350506020620000ed8682870162000089565b92505060406200010086828701620000a9565b9150509250925092565b6000620000968262000124565b600062000096826200010a565b6001600160a01b031690565b90565b6200013e816200010a565b81146200014a57600080fd5b50565b6200013e8162000117565b6200013e8162000130565b610c5880620001736000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063ba75bbd81161008c578063d86ee48d11610066578063d86ee48d14610192578063ddf0b0091461019a578063ee9d68ce146101ad578063fbfa77cf146101c0576100ea565b8063ba75bbd81461016d578063c7accaa414610175578063cb23bcb51461017d576100ea565b80638dde0840116100c85780638dde08401461012a578063966fda62146101325780639d23c4c714610145578063ade000261461015a576100ea565b806307663706146100ef5780632dfdf0b514610104578063425e97f214610122575b600080fd5b6101026100fd366004610782565b6101c8565b005b61010c6101ea565b6040516101199190610ad0565b60405180910390f35b61010c6101f0565b61010c6101f6565b610102610140366004610820565b6101fc565b61014d6104b4565b6040516101199190610af9565b6101026101683660046107e4565b6104c3565b61010c6104f9565b61010c6104ff565b610185610505565b6040516101199190610a78565b61010c610514565b61010c6101a83660046107e4565b61054e565b61010c6101bb3660046107e4565b610560565b610185610572565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b60055481565b60045481565b60025481565b600082116102255760405162461bcd60e51b815260040161021c90610b37565b60405180910390fd5b6009546040516320f5ab4f60e11b81526000916001600160a01b0316906341eb569e90610256908590600401610ad0565b60206040518083038186803b15801561026e57600080fd5b505afa158015610282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506102a691908101906107a8565b905082816001600160a01b031663dd62ed3e33306040518363ffffffff1660e01b81526004016102d7929190610a86565b60206040518083038186803b1580156102ef57600080fd5b505afa158015610303573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103279190810190610802565b10156103455760405162461bcd60e51b815260040161021c90610b07565b6007546040516323b872dd60e01b81526001600160a01b03808416926323b872dd9261037992339216908890600401610aa8565b602060405180830381600087803b15801561039357600080fd5b505af11580156103a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103cb91908101906107c6565b6103e75760405162461bcd60e51b815260040161021c90610b47565b6103ef61071d565b604051806080016040528086815260200184815260200185815260200160008152509050606061041e82610581565b90507f5a1922090c12e28c132a961f6bb4d74350598a62e8981b5eb9bb5ccbbce9df948682604051610451929190610b57565b60405180910390a1600061046b82805190602001206105c0565b905080156104ab577f4744f3a44c5716c9fa423a71cdaa806771a8bf469f4c007ca338b8e8e202a8b5816040516104a29190610ad0565b60405180910390a15b50505050505050565b6009546001600160a01b031681565b6008546001600160a01b031633146104ed5760405162461bcd60e51b815260040161021c90610b17565b6104f6816106b9565b50565b60015481565b60065481565b6008546001600160a01b031681565b6008546000906001600160a01b031633146105415760405162461bcd60e51b815260040161021c90610b17565b6105496106d5565b905090565b60006020819052908152604090205481565b60036020526000908152604090205481565b6007546001600160a01b031681565b606081600001518260200151836040015184606001516040516020016105aa9493929190610a30565b6040516020818303038152906040529050919050565b6005805460019081019182905560045460008181526003602052604081208590559291015b60018216610657576001198101600090815260036020908152604080832054600019850184529281902054905161061d939201610ade565b60408051601f19818403018152918152815160209283012060011984016000908152600390935291205560019190911c90600019016105e5565b600481905560065460055414156106ad576000805260036020527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff54925061069e836106b9565b600060048190556005556106b2565b600092505b5050919050565b6002805460010190819055600090815260208190526040902055565b600060015460025410156106fb5760405162461bcd60e51b815260040161021c90610b27565b5060018054600090815260208190526040812080549190558154820190915590565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b803561075081610bef565b92915050565b805161075081610bef565b805161075081610c03565b803561075081610c0c565b805161075081610c0c565b60006020828403121561079457600080fd5b60006107a08484610745565b949350505050565b6000602082840312156107ba57600080fd5b60006107a08484610756565b6000602082840312156107d857600080fd5b60006107a08484610761565b6000602082840312156107f657600080fd5b60006107a0848461076c565b60006020828403121561081457600080fd5b60006107a08484610777565b60008060006060848603121561083557600080fd5b6000610841868661076c565b93505060206108528682870161076c565b92505060406108638682870161076c565b9150509250925092565b61087681610ba3565b82525050565b61087681610b84565b61087681610b94565b600061089982610b77565b6108a38185610b7b565b93506108b3818560208601610bb5565b6108bc81610be5565b9093019392505050565b61087681610baa565b60006108dc601c83610b7b565b7f746f6b656e20616c6c6f77616e6365206e6f7420617070726f76656400000000815260200192915050565b6000610915602d83610b7b565b7f4465706f7369744d616e616765723a2073656e646572206973206e6f7420526f81526c1b1b1d5c0818dbdb9d1c9858dd609a1b602082015260400192915050565b6000610964602783610b7b565b7f4465706f73697420436f72653a2051756575652073686f756c64206265206e6f8152666e2d656d70747960c81b602082015260400192915050565b60006109ad602483610b7b565b7f746f6b656e206465706f736974206d75737420626520677265617465722074688152630616e20360e41b602082015260400192915050565b60006109f3601b83610b7b565b7f746f6b656e207472616e73666572206e6f7420617070726f7665640000000000815260200192915050565b610876610a2b82610b94565b610b94565b6000610a3c8287610a1f565b602082019150610a4c8286610a1f565b602082019150610a5c8285610a1f565b602082019150610a6c8284610a1f565b50602001949350505050565b60208101610750828461087c565b60408101610a94828561086d565b610aa1602083018461087c565b9392505050565b60608101610ab6828661086d565b610ac3602083018561087c565b6107a06040830184610885565b602081016107508284610885565b60408101610aec8285610885565b610aa16020830184610885565b6020810161075082846108c6565b60208082528101610750816108cf565b6020808252810161075081610908565b6020808252810161075081610957565b60208082528101610750816109a0565b60208082528101610750816109e6565b60408101610b658285610885565b81810360208301526107a0818461088e565b5190565b90815260200190565b600061075082610b97565b151590565b90565b6001600160a01b031690565b6000610750825b600061075082610b84565b60005b83811015610bd0578181015183820152602001610bb8565b83811115610bdf576000848401525b50505050565b601f01601f191690565b610bf881610b84565b81146104f657600080fd5b610bf881610b8f565b610bf881610b9456fea365627a7a7231582073b7a0701567ebf897236b97bf55b94f69b003f279b068776da6fe5b588041ef6c6578706572696d656e74616cf564736f6c634300050f0040";
