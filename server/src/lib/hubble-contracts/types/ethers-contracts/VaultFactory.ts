/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Signer} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import {Contract, ContractFactory, Overrides} from "@ethersproject/contracts";

import {Vault} from "./Vault";

export class VaultFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _tokenRegistry: string,
    _spokes: string,
    overrides?: Overrides
  ): Promise<Vault> {
    return super.deploy(_tokenRegistry, _spokes, overrides || {}) as Promise<
      Vault
    >;
  }
  getDeployTransaction(
    _tokenRegistry: string,
    _spokes: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenRegistry, _spokes, overrides || {});
  }
  attach(address: string): Vault {
    return super.attach(address) as Vault;
  }
  connect(signer: Signer): VaultFactory {
    return super.connect(signer) as VaultFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ITokenRegistry",
        name: "_tokenRegistry",
        type: "address"
      },
      {
        internalType: "contract SpokeRegistry",
        name: "_spokes",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "batchID",
        type: "uint256"
      }
    ],
    name: "isBatchApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "batchID",
        type: "uint256"
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "stateRoot",
                type: "bytes32"
              },
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "accountRoot",
                    type: "bytes32"
                  },
                  {
                    internalType: "uint256[2]",
                    name: "signature",
                    type: "uint256[2]"
                  },
                  {
                    internalType: "uint256",
                    name: "spokeID",
                    type: "uint256"
                  },
                  {
                    internalType: "bytes32",
                    name: "withdrawRoot",
                    type: "bytes32"
                  },
                  {
                    internalType: "uint256",
                    name: "tokenID",
                    type: "uint256"
                  },
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256"
                  },
                  {
                    internalType: "uint256",
                    name: "feeReceiver",
                    type: "uint256"
                  },
                  {
                    internalType: "bytes",
                    name: "txs",
                    type: "bytes"
                  }
                ],
                internalType: "struct Types.MassMigrationBody",
                name: "body",
                type: "tuple"
              }
            ],
            internalType: "struct Types.MassMigrationCommitment",
            name: "commitment",
            type: "tuple"
          },
          {
            internalType: "uint256",
            name: "path",
            type: "uint256"
          },
          {
            internalType: "bytes32[]",
            name: "witness",
            type: "bytes32[]"
          }
        ],
        internalType: "struct Types.MMCommitmentInclusionProof",
        name: "commitmentMP",
        type: "tuple"
      }
    ],
    name: "requestApproval",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "rollup",
    outputs: [
      {
        internalType: "contract Rollup",
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract Rollup",
        name: "_rollup",
        type: "address"
      }
    ],
    name: "setRollupAddress",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "spokes",
    outputs: [
      {
        internalType: "contract SpokeRegistry",
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "tokenRegistry",
    outputs: [
      {
        internalType: "contract ITokenRegistry",
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "";
